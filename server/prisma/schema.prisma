generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  firebaseUid String    @unique
  companyName String?
  address1    String?
  address2    String?
  city        String?
  province    String?
  postalCode  String?
  website     String?
  description String?
  phone       String?
  logoUrl     String?
  chatbotName String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isAdmin     Boolean   @default(false)
  listings    Listing[] @relation("UserListings")
  savedListings SavedListing[] @relation("UserSavedListings")
}

model Listing {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  companyName String?
  imageUrl    String?
  tags        String[]
  categories  String[]
  city        String?
  isDraft     Boolean  @default(false)
  userId      Int
  createdAt   DateTime @default(now())
  timestamp   BigInt?
  fileUrl     String?
  user        User     @relation("UserListings", fields: [userId], references: [id])
  savedBy     SavedListing[] @relation("ListingSavedBy")
}
 
model SavedListing {
  id        Int      @id @default(autoincrement())
  userId    Int
  listingId Int
  createdAt DateTime @default(now())
  user      User     @relation("UserSavedListings", fields: [userId], references: [id])
  listing   Listing  @relation("ListingSavedBy", fields: [listingId], references: [id])

  @@unique([userId, listingId])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  imageUrl    String?
  isFeatured  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

